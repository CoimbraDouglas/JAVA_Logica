# üìò Lista de Exerc√≠cios 3 - Linguagens de Programa√ß√£o

**Disciplina:** Linguagens de Programa√ß√£o
**Professor:** Fabr√≠cio Rodrigues In√°cio

---

## üìÇ Estrutura do Projeto

Cada exerc√≠cio foi resolvido em um arquivo separado, numerado de `01` a `06`, dentro desta mesma pasta.


## üìù Lista de Exerc√≠cios

1. **Divis√£o com tratamento de exce√ß√£o**
   Implemente um programa que pe√ßa dois n√∫meros inteiros e tente realizar uma divis√£o.

   * Trate a exce√ß√£o de **divis√£o por zero** utilizando `try-catch`.

2. **Entrada inv√°lida do usu√°rio**
   Pe√ßa ao usu√°rio para digitar um n√∫mero.

   * Trate a exce√ß√£o caso o usu√°rio insira algo que **n√£o seja um n√∫mero**.

3. **√çndice fora do limite**
   Crie um programa que tente acessar um √≠ndice fora do limite de um array.

   * Trate a exce√ß√£o adequadamente.

4. **Exce√ß√£o personalizada - IdadeInvalidaException**
   Crie uma classe de exce√ß√£o personalizada chamada `IdadeInvalidaException`.

   * Implemente um programa que pe√ßa a idade de uma pessoa.
   * Lance essa exce√ß√£o se a idade for **negativa** ou **maior que 150**.

5. **Raiz quadrada com IllegalArgumentException**
   Crie uma fun√ß√£o que calcula a raiz quadrada de um n√∫mero.

   * Lance uma `IllegalArgumentException` se o n√∫mero for **negativo**.
   * A exce√ß√£o deve ser capturada e tratada no `main`.

6. **Tratamento de m√∫ltiplas exce√ß√µes**
   Crie um programa que tente dividir dois n√∫meros e realizar opera√ß√µes com um array.

   * Trate as m√∫ltiplas exce√ß√µes usando `try-catch`.

---
